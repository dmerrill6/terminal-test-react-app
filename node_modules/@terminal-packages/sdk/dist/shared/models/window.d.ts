import Web3 from 'web3';
import { ITerminalHttpProvider } from '../../providers/http/iterminal-http-provider';
import { IMetaMaskOptions } from '../../providers/metamask/models/imetamask-options';
export interface ITerminalWindow extends Window {
    web3: Web3;
    Web3: new (terminalProvider: ITerminalHttpProvider) => Web3;
    ethereum: {
        on: (eventName: string, callback: Function) => void;
        networkVersion: string;
        autoRefreshOnNetworkChange: boolean;
        isMetaMask: boolean;
        enable(): Promise<string[]>;
        send(method: string, parameters: any[]): Promise<any>;
    } | undefined;
    terminal: {
        sdk: {
            metamask: {
                startLogging: (options: IMetaMaskOptions) => void;
            };
        };
    };
}
declare const _default: ITerminalWindow;
export default _default;
